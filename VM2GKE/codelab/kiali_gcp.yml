---
# Source: kiali/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kiali
  namespace: istio-system
  labels:
    app: kiali

type: Opaque
data:
  username: "YWRtaW4="
  passphrase: "YWRtaW4="

---
# Source: kiali/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kiali
  namespace: istio-system
  labels:
    app: kiali
data:
  config.yaml: |
    server:
      port: 20001
    external_services:
      jaeger:
        url: 
      grafana:
        url: 

---
# Source: kiali/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kiali-service-account
  namespace: istio-system
  labels:
    app: kiali
    chart: kiali-1.0.3
    heritage: Tiller
    release: kiali

---
# Source: kiali/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kiali
  labels:
    app: kiali
    version: master
rules:
- apiGroups: ["","apps", "autoscaling"]
  resources:
  - configmaps
  - namespaces
  - nodes
  - pods
  - projects
  - services
  - endpoints
  - deployments
  - horizontalpodautoscalers
  verbs:
  - get
  - list
  - watch
- apiGroups: ["config.istio.io"]
  resources:
  - rules
  - circonuses
  - deniers
  - fluentds
  - kubernetesenvs
  - listcheckers
  - memquotas
  - opas
  - prometheuses
  - rbacs
  - servicecontrols
  - solarwindses
  - stackdrivers
  - statsds
  - stdios
  - apikeys
  - authorizations
  - checknothings
  - kuberneteses
  - listentries
  - logentries
  - metrics
  - quotas
  - reportnothings
  - servicecontrolreports
  - quotaspecs
  - quotaspecbindings
  verbs:
  - get
  - list
  - watch
- apiGroups: ["networking.istio.io"]
  resources:
  - virtualservices
  - destinationrules
  - serviceentries
  - gateways
  verbs:
  - get
  - list
  - watch

---
# Source: kiali/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: istio-kiali-admin-role-binding-istio-system
  labels:
    app: kiali
    chart: kiali-1.0.3
    heritage: Tiller
    release: kiali
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kiali
subjects:
- kind: ServiceAccount
  name: kiali-service-account
  namespace: istio-system

---
# Source: kiali/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kiali
  namespace: istio-system
  labels:
    app: kiali
spec:
  ports:
  - name: tcp
    protocol: TCP
    port: 20001
    name: http-kiali
  selector:
    app: kiali

---
# Source: kiali/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kiali
  namespace: istio-system
  labels:
    app: kiali
    chart: kiali-1.0.3
    release: kiali
    heritage: Tiller
spec:
  replicas: 
  selector:
    matchLabels:
      app: kiali
  template:
    metadata:
      name: kiali
      labels:
        app: kiali
      annotations:
        sidecar.istio.io/inject: "false"
        scheduler.alpha.kubernetes.io/critical-pod: ""
    spec:
      serviceAccountName: kiali-service-account
      containers:
      - image: "docker.io/kiali/kiali:v0.9"
        name: kiali
        command:
        - "/opt/kiali/kiali"
        - "-config"
        - "/kiali-configuration/config.yaml"
        - "-v"
        - "4"
        env:
        - name: ACTIVE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: SERVER_CREDENTIALS_USERNAME
          valueFrom:
            secretKeyRef:
              name: kiali
              key: username
        - name: SERVER_CREDENTIALS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kiali
              key: passphrase
        - name: PROMETHEUS_SERVICE_URL
          value: http://prometheus-user:9090
        volumeMounts:
        - name: kiali-configuration
          mountPath: "/kiali-configuration"
        resources:
          null
          
      volumes:
      - name: kiali-configuration
        configMap:
          name: kiali

---
# Source: kiali/templates/ingress.yaml
