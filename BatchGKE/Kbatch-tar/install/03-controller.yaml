# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: kbatch-manager-role
rules:
- apiGroups:
  - kbatch.k8s.io
  resources:
  - batchnodes
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - kbatch.k8s.io
  resources:
  - batchbudgets
  verbs:
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - kbatch.k8s.io
  resources:
  - batchtasks
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - kbatch.k8s.io
  resources:
  - batchcostmodels
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - kbatch.k8s.io
  resources:
  - batchjobs
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - kbatch.k8s.io
  resources:
  - batchtasks
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - kbatch.k8s.io
  resources:
  - batchpriorities
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - kbatch.k8s.io
  resources:
  - batchqueues
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - get
  - list
  - create
- apiGroups:
  - ""
  resources:
  - pods/attach
  verbs:
  - get
  - list
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  verbs:
  - get
  - list
  - create
  - bind
  - escalate
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - get
  - list
  - create
- apiGroups:
  - kbatch.k8s.io
  resources:
  - batchusercontexts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - kbatch.k8s.io
  resources:
  - batchtasks
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - kbatch.k8s.io
  resources:
  - batchtokens
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: kbatch-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kbatch-manager-role
subjects:
- kind: ServiceAccount
  name: kbatch-controllers-k8s-sa
  namespace: kube-system
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    control-plane: kbatch-controllers
    controller-tools.k8s.io: "1.0"
  name: kbatch-controllers-service
  namespace: kube-system
spec:
  ports:
  - name: std
    port: 443
  - name: metrics
    nodePort: 30001
    port: 8080
    targetPort: 8080
  selector:
    control-plane: kbatch-controllers
    controller-tools.k8s.io: "1.0"
  type: NodePort
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    control-plane: kbatch-controllers
    controller-tools.k8s.io: "1.0"
  name: kbatch-controllers
  namespace: kube-system
spec:
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      control-plane: kbatch-controllers
      controller-tools.k8s.io: "1.0"
  serviceName: kbatch-controllers-service
  template:
    metadata:
      labels:
        control-plane: kbatch-controllers
        controller-tools.k8s.io: "1.0"
    spec:
      containers:
      - command:
        - /root/manager
        - --tc-worker-count=200
        - --max_client_qps=150
        - --task_scheduling_workers=100
        - -debug-log-id=true
        - -alsologtostderr=true
        image: gcr.io/kbatch/controller-manager:kbatch-0.7.1
        imagePullPolicy: Always
        name: kbatch-controllers-container
        resources:
          limits:
            cpu: 7
            memory: 4Gi
          requests:
            cpu: 3.5
            memory: 2Gi
        volumeMounts:
        - mountPath: /config
          name: kbatch-config
        - mountPath: /autoscalar
          name: kbatch-machine-types
      priorityClassName: system-cluster-critical
      serviceAccountName: kbatch-controllers-k8s-sa
      terminationGracePeriodSeconds: 10
      volumes:
      - configMap:
          name: kbatch-config
        name: kbatch-config
      - configMap:
          name: kbatch-machine-types
        name: kbatch-machine-types
